
use strict;
use warnings;

BEGIN {
    $ENV{SDM_DEPLOYMENT} ||= "testing";
    $ENV{UR_DBI_NO_COMMIT} = 0;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 0;
};

use Test::More;
use Test::Output;
use Test::Exception;
use Data::Dumper;

use HTML::TreeBuilder;

use_ok( 'SDM' );
use_ok( 'SDM::Disk::Filer::Set::View::Status::Json' );

# Start with a fresh database
use FindBin;
use File::Basename qw/dirname/;
my $top = dirname $FindBin::Bin;
require "$top/t/sdm-disk-lib.pm";

my $t = SDM::Disk::Lib->new();
ok( $t->testinit == 0, "ok: init db");
ok( $t->testdata == 0, "ok: add data");

my @s = SDM::Disk::Filer->define_set();
my $v = $s[0]->create_view( perspective => 'status', toolkit => 'json' );
my $json = $v->_jsobj();

# This must match the data used in SDM::Disk::Lib->testdata
my $expected = {
    'iTotalDisplayRecords' => '3',
    'iTotalRecords' => '3',
    'aaData' => [
        [
        'gpfs',
    1,
    'linuscs103',
    'nsams2k1',
    'This is a comment',
    '0000-00-00 00:00:00',
    '0000-00-00 00:00:00'
        ],
    [
        'gpfs-dev',
    1,
    'linuscs107',
    'nsams2k2',
    'This is another comment',
    '0000-00-00 00:00:00',
    '0000-00-00 00:00:00'
        ],
    [
        'gpfs2',
    1,
    'unknown',
    'unknown',
    'This is another comment',
    '0000-00-00 00:00:00',
    '0000-00-00 00:00:00'
        ]
        ],
    'sEcho' => 1
};

ok( is_deeply( $json, $expected, "ok: is_deeply" ), "ok: json match");

done_testing();
