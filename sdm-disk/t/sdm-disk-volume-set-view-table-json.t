
use strict;
use warnings;

BEGIN {
    $ENV{SDM_DEPLOYMENT} ||= "testing";
    $ENV{UR_DBI_NO_COMMIT} = 0;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 0;
};

use Test::More;
use Test::Output;
use Test::Exception;

use JSON;

use_ok( 'SDM' );
use_ok( 'SDM::Disk::Volume::Set::View::Table::Json' );

# Start with a fresh database
use FindBin;
use File::Basename qw/dirname/;
my $top = dirname $FindBin::Bin;
require "$top/t/sdm-lib.pm";

my $t = SDM::Test::Lib->new();
ok( $t->testinit == 0, "ok: init db");
ok( $t->testdata == 0, "ok: add data");

my $s = SDM::Disk::Volume->define_set();
my $v = $s->create_view( perspective => 'table', toolkit => 'json' );
my $got = $v->_generate_content();

my $expected = {
   "members" => [
      {
         "total_kb"   => "100 (100 KB)",
         "disk_group" => "SYSTEMS_DEVELOPMENT",
         "filername"  => [
            "gpfs-dev"
         ],
         "mount_path" => "/gscmnt/gc2111",
         "used_kb"    => "50 (50 KB)",
         "capacity"   => "50 %"
      }
   ],
   "rule_display" => "UR::BoolExpr=(SDM::Disk::Volume:)"
};
my $json = JSON->new->ascii->pretty->allow_nonref;
$expected = $json->encode($expected);

ok( is_deeply( $got , $expected, "is_deeply" ), "json match");

done_testing();
