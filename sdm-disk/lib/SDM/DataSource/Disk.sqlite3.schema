PRAGMA foreign_keys = ON;
DROP TABLE IF EXISTS disk_user;
DROP TABLE IF EXISTS disk_group;
DROP TABLE IF EXISTS disk_array_disk_set;
DROP TABLE IF EXISTS disk_host_array;
DROP TABLE IF EXISTS disk_array;
DROP TABLE IF EXISTS disk_host;
DROP TABLE IF EXISTS disk_fileset;
DROP TABLE IF EXISTS disk_volume;
DROP TABLE IF EXISTS disk_filer_host;
DROP TABLE IF EXISTS disk_filer;
CREATE TABLE IF NOT EXISTS disk_user (
  email         VARCHAR(255) PRIMARY KEY,
  created       DATE,
  last_modified DATE
);
CREATE TABLE IF NOT EXISTS disk_filer (
  name          VARCHAR(255) PRIMARY KEY,
  status        UNSIGNED INTEGER DEFAULT 0 NOT NULL ON CONFLICT REPLACE,
  type          VARCHAR(255),
  filesystem    VARCHAR(255),
  manufacturer  VARCHAR(255),
  model         VARCHAR(255),
  comments      VARCHAR(255),
  created       DATE,
  last_modified DATE
);
CREATE TABLE IF NOT EXISTS disk_host (
  hostname      VARCHAR(255) NOT NULL PRIMARY KEY,
  status        UNSIGNED INTEGER DEFAULT 0 NOT NULL ON CONFLICT REPLACE,
  master        UNSIGNED INTEGER DEFAULT 0 NOT NULL ON CONFLICT REPLACE,
  manufacturer  VARCHAR(255),
  model         VARCHAR(255),
  os            VARCHAR(255),
  location      VARCHAR(255),
  comments      VARCHAR(255),
  created       DATE,
  last_modified DATE
);
CREATE TABLE IF NOT EXISTS disk_group (
  name          VARCHAR(255) NOT NULL PRIMARY KEY,
  permissions   UNSIGNED INTEGER DEFAULT 0 NOT NULL ON CONFLICT REPLACE,
  sticky        UNSIGNED INTEGER DEFAULT 0 NOT NULL ON CONFLICT REPLACE,
  subdirectory  VARCHAR(255) NOT NULL,
  unix_uid      UNSIGNED INTEGER DEFAULT 0 NOT NULL ON CONFLICT REPLACE,
  unix_gid      UNSIGNED INTEGER DEFAULT 0 NOT NULL ON CONFLICT REPLACE,
  username      VARCHAR(255),
  comments      VARCHAR(255),
  created       DATE,
  last_modified DATE
);
CREATE TABLE IF NOT EXISTS disk_filer_host (
  filername     VARCHAR(255),
  hostname      VARCHAR(255),
  PRIMARY KEY(filername,hostname),
  CONSTRAINT disk_filer_host_filername_fk FOREIGN KEY (filername) REFERENCES disk_filer (name) DEFERRABLE INITIALLY DEFERRED,
  CONSTRAINT disk_filer_host_hostname_fk FOREIGN KEY (hostname) REFERENCES disk_host (hostname) DEFERRABLE INITIALLY DEFERRED
);
CREATE TABLE IF NOT EXISTS disk_volume (
  id            VARCHAR(255) PRIMARY KEY,
  filername     VARCHAR(255),
  physical_path VARCHAR(255) NOT NULL,
  mount_point   VARCHAR(255) NOT NULL,
  total_kb      UNSIGNED INTEGER DEFAULT 0 NOT NULL ON CONFLICT REPLACE,
  used_kb       UNSIGNED INTEGER DEFAULT 0 NOT NULL ON CONFLICT REPLACE,
  created       DATE,
  last_modified DATE,
  comments      VARCHAR(255),
  mount_options VARCHAR(255) NOT NULL,
  disk_group    VARCHAR(255),
  duplicates    VARCHAR(255),
  UNIQUE (filername,physical_path),
  CONSTRAINT disk_volume_group_fk FOREIGN KEY (disk_group) REFERENCES disk_group (name) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED,
  CONSTRAINT disk_volume_filername_fk FOREIGN KEY (filername) REFERENCES disk_filer (name) DEFERRABLE INITIALLY DEFERRED
);
CREATE TABLE disk_fileset (
  id            VARCHAR(255) PRIMARY KEY,
  filername     VARCHAR(255) NOT NULL,
  physical_path VARCHAR(255) NOT NULL,
  mount_point   VARCHAR(255) NOT NULL,
  total_kb      UNSIGNED INTEGER DEFAULT 0 NOT NULL ON CONFLICT REPLACE,
  used_kb       UNSIGNED INTEGER DEFAULT 0 NOT NULL ON CONFLICT REPLACE,
  created       DATE,
  last_modified DATE,
  comments      VARCHAR(255),
  mount_options VARCHAR(255) NOT NULL,
  disk_group    VARCHAR(255),
  type          VARCHAR(255) NOT NULL,
  kb_size       UNSIGNED INTEGER NOT NULL,
  kb_quota      UNSIGNED INTEGER NOT NULL,
  kb_limit      UNSIGNED INTEGER NOT NULL,
  kb_in_doubt   UNSIGNED INTEGER NOT NULL,
  kb_grace      UNSIGNED INTEGER NOT NULL,
  files         UNSIGNED INTEGER NOT NULL,
  file_quota    UNSIGNED INTEGER NOT NULL,
  file_limit    UNSIGNED INTEGER NOT NULL,
  file_in_doubt UNSIGNED INTEGER NOT NULL,
  file_grace    UNSIGNED INTEGER NOT NULL,
  file_entryType VARCHAR(1) NOT NULL,
  parent_volume_id VARCHAR(255) NOT NULL,
  UNIQUE (filername,physical_path),
  CONSTRAINT disk_fileset_filername_fk FOREIGN KEY (filername) REFERENCES disk_filer (name) DEFERRABLE INITIALLY DEFERRED,
  CONSTRAINT disk_fileset_volume_fk FOREIGN KEY (parent_volume_id) REFERENCES disk_volume (id) DEFERRABLE INITIALLY DEFERRED
);
CREATE TABLE IF NOT EXISTS disk_array (
  name          VARCHAR(255) PRIMARY KEY,
  manufacturer  VARCHAR(255),
  model         VARCHAR(255),
  serial        VARCHAR(255),
  description   VARCHAR(255),
  comments      VARCHAR(255),
  location      VARCHAR(255),
  created       DATE,
  last_modified DATE
);
CREATE TABLE IF NOT EXISTS disk_array_disk_set (
  id            INTEGER PRIMARY KEY AUTOINCREMENT,
  disk_type     VARCHAR(255),
  disk_num      UNSIGNED INTEGER DEFAULT 0 NOT NULL ON CONFLICT REPLACE,
  disk_size     UNSIGNED INTEGER DEFAULT 0 NOT NULL ON CONFLICT REPLACE,
  comments      VARCHAR(255),
  created       VARCHAR(255),
  last_modified VARCHAR(255),
  arrayname     VARCHAR(255) CONSTRAINT disk_array_name_fk REFERENCES disk_array (name) DEFERRABLE INITIALLY DEFERRED
);
CREATE TABLE IF NOT EXISTS disk_host_array (
  hostname      VARCHAR(255),
  arrayname     VARCHAR(255),
  PRIMARY KEY(hostname,arrayname),
  CONSTRAINT disk_host_array_hostname_fk FOREIGN KEY(hostname) REFERENCES disk_host (hostname) DEFERRABLE INITIALLY DEFERRED,
  CONSTRAINT disk_host_array_arraynme_fk FOREIGN KEY(arrayname) REFERENCES disk_array (name) DEFERRABLE INITIALLY DEFERRED
);
