PRAGMA foreign_keys = ON;
DROP TABLE IF EXISTS disk_user;
DROP TABLE IF EXISTS disk_group;
DROP TABLE IF EXISTS disk_array;
DROP TABLE IF EXISTS disk_host_array;
DROP TABLE IF EXISTS disk_host;
DROP TABLE IF EXISTS disk_volume;
DROP TABLE IF EXISTS disk_export;
DROP TABLE IF EXISTS disk_filer_host;
DROP TABLE IF EXISTS disk_filer;
CREATE TABLE IF NOT EXISTS disk_user (
  email         VARCHAR(255) NOT NULL PRIMARY KEY,
  created       DATE,
  last_modified DATE
);
CREATE TABLE IF NOT EXISTS disk_filer (
  name          VARCHAR(255) PRIMARY KEY,
  status        UNSIGNED INTEGER DEFAULT 0 NOT NULL ON CONFLICT REPLACE,
  filesystem    VARCHAR(255),
  comments      VARCHAR(255),
  created       DATE,
  last_modified DATE
);
CREATE TABLE IF NOT EXISTS disk_host (
  hostname      VARCHAR(255) NOT NULL PRIMARY KEY,
  status        UNSIGNED INTEGER DEFAULT 0 NOT NULL ON CONFLICT REPLACE,
  os            VARCHAR(255),
  location      VARCHAR(255),
  comments      VARCHAR(255),
  master        UNSIGNED INTEGER DEFAULT 0 NOT NULL ON CONFLICT REPLACE,
  created       DATE,
  last_modified DATE
);
CREATE TABLE IF NOT EXISTS disk_group (
  name          VARCHAR(255) NOT NULL PRIMARY KEY,
  permissions   UNSIGNED INTEGER DEFAULT 0 NOT NULL ON CONFLICT REPLACE,
  sticky        UNSIGNED INTEGER DEFAULT 0 NOT NULL ON CONFLICT REPLACE,
  subdirectory  VARCHAR(255) NOT NULL,
  unix_uid      UNSIGNED INTEGER DEFAULT 0 NOT NULL ON CONFLICT REPLACE,
  unix_gid      UNSIGNED INTEGER DEFAULT 0 NOT NULL ON CONFLICT REPLACE,
  username      VARCHAR(255),
  created       DATE,
  last_modified DATE
);
CREATE TABLE IF NOT EXISTS disk_filer_host (
  filername     VARCHAR(255),
  hostname      VARCHAR(255),
  PRIMARY KEY(filername,hostname),
  CONSTRAINT disk_filer_host_filername_fk FOREIGN KEY (filername) REFERENCES disk_filer (name) DEFERRABLE INITIALLY DEFERRED,
  CONSTRAINT disk_filer_host_hostname_fk FOREIGN KEY (hostname) REFERENCES disk_host (hostname) DEFERRABLE INITIALLY DEFERRED
);
CREATE TABLE IF NOT EXISTS disk_export (
  id            INTEGER PRIMARY KEY AUTOINCREMENT,
  filername     VARCHAR(255) NOT NULL CONSTRAINT disk_export_fk REFERENCES disk_filer (name) DEFERRABLE INITIALLY DEFERRED,
  physical_path VARCHAR(255) NOT NULL,
  created       DATE,
  last_modified DATE,
  CONSTRAINT disk_export_uq UNIQUE (filername,physical_path)
);
CREATE TABLE IF NOT EXISTS disk_volume (
  id            INTEGER PRIMARY KEY AUTOINCREMENT,
  mount_path    VARCHAR(255) NOT NULL,
  total_kb      UNSIGNED INTEGER DEFAULT 0 NOT NULL ON CONFLICT REPLACE,
  used_kb       UNSIGNED INTEGER DEFAULT 0 NOT NULL ON CONFLICT REPLACE,
  created       DATE,
  last_modified DATE,
  disk_group    VARCHAR(255) CONSTRAINT disk_volume_fk REFERENCES disk_group (name) ON DELETE SET NULL DEFERRABLE INITIALLY DEFERRED
);
CREATE TABLE IF NOT EXISTS disk_mount (
  export_id     INTEGER,
  volume_id     INTEGER,
  PRIMARY KEY(export_id,volume_id),
  CONSTRAINT disk_mount_export_fk FOREIGN KEY(export_id) REFERENCES disk_export (id) DEFERRABLE INITIALLY DEFERRED,
  CONSTRAINT disk_mount_volume_fk FOREIGN KEY(volume_id) REFERENCES disk_volume (id) DEFERRABLE INITIALLY DEFERRED
);
CREATE TABLE IF NOT EXISTS disk_array (
  name          VARCHAR(255) NOT NULL PRIMARY KEY,
  model         VARCHAR(255),
  type          VARCHAR(255),
  arraysize     UNSIGNED INTEGER DEFAULT 0 NOT NULL ON CONFLICT REPLACE,
  created       DATE,
  last_modified DATE,
  hostname      VARCHAR(255) CONSTRAINT disk_array_host_fk REFERENCES disk_host (hostname) DEFERRABLE INITIALLY DEFERRED
);
CREATE TABLE IF NOT EXISTS disk_host_array (
  hostname      VARCHAR(255),
  arrayname     VARCHAR(255),
  PRIMARY KEY(hostname,arrayname),
  CONSTRAINT disk_host_array_hostname_fk FOREIGN KEY(hostname) REFERENCES disk_host (hostname) DEFERRABLE INITIALLY DEFERRED,
  CONSTRAINT disk_host_array_arraynme_fk FOREIGN KEY(arrayname) REFERENCES disk_array (name) DEFERRABLE INITIALLY DEFERRED
);
