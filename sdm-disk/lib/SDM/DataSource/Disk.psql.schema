DROP TABLE IF EXISTS disk_gpfs_node;
DROP TABLE IF EXISTS disk_gpfs_fs_perf;
DROP TABLE IF EXISTS disk_gpfs_disk_perf;
DROP TABLE IF EXISTS disk_user;
DROP TABLE IF EXISTS disk_host_array;
DROP TABLE IF EXISTS disk_filer_host;
DROP TABLE IF EXISTS disk_mount;
DROP TABLE IF EXISTS disk_array;
DROP TABLE IF EXISTS disk_host;
DROP TABLE IF EXISTS disk_volume;
DROP TABLE IF EXISTS disk_export;
DROP TABLE IF EXISTS disk_filer;
DROP TABLE IF EXISTS disk_group;
CREATE TABLE disk_user (
  email         VARCHAR(255) PRIMARY KEY,
  created       DATE,
  last_modified DATE
);
CREATE TABLE disk_group (
  name          VARCHAR(255) PRIMARY KEY,
  permissions   SMALLINT NOT NULL DEFAULT 0,
  sticky        SMALLINT NOT NULL DEFAULT 0,
  subdirectory  VARCHAR(255) NOT NULL,
  unix_uid      SMALLINT NOT NULL DEFAULT 0,
  unix_gid      SMALLINT NOT NULL DEFAULT 0,
  username      VARCHAR(255),
  created       DATE,
  last_modified DATE
);
CREATE TABLE disk_filer (
  name          VARCHAR(255) PRIMARY KEY,
  status        SMALLINT NOT NULL DEFAULT 0,
  filesystem    VARCHAR(255),
  comments      VARCHAR(255),
  created       DATE,
  last_modified DATE
);
CREATE TABLE disk_export (
  id            BIGSERIAL PRIMARY KEY,
  filername     VARCHAR(255) NOT NULL CONSTRAINT disk_export_fk REFERENCES disk_filer (name) ON DELETE CASCADE,
  physical_path VARCHAR(255) NOT NULL,
  created       DATE,
  last_modified DATE,
  CONSTRAINT disk_export_uq UNIQUE (filername,physical_path)
);
CREATE TABLE disk_volume (
  id            BIGSERIAL PRIMARY KEY,
  mount_path    VARCHAR(255) NOT NULL,
  total_kb      BIGINT DEFAULT 0 NOT NULL,
  used_kb       BIGINT DEFAULT 0 NOT NULL,
  created       DATE,
  last_modified DATE,
  disk_group    VARCHAR(255) CONSTRAINT disk_volume_fk REFERENCES disk_group (name)
);
CREATE TABLE disk_mount (
  export_id     BIGINT,
  volume_id     BIGINT,
  PRIMARY KEY(export_id,volume_id),
  CONSTRAINT disk_mount_export_fk FOREIGN KEY (export_id) REFERENCES disk_export (id) ON DELETE CASCADE,
  CONSTRAINT disk_mount_volume_fk FOREIGN KEY (volume_id) REFERENCES disk_volume (id) ON DELETE CASCADE
);
CREATE TABLE disk_host (
  hostname      VARCHAR(255) PRIMARY KEY,
  status        SMALLINT NOT NULL DEFAULT 0,
  os            VARCHAR(255),
  location      VARCHAR(255),
  comments      VARCHAR(255),
  master        SMALLINT NOT NULL DEFAULT 0,
  created       DATE,
  last_modified DATE
);
CREATE TABLE disk_filer_host (
  filername     VARCHAR(255),
  hostname      VARCHAR(255),
  PRIMARY KEY(filername,hostname),
  CONSTRAINT disk_filer_host_filername_fk FOREIGN KEY(filername) REFERENCES disk_filer (name) ON DELETE CASCADE,
  CONSTRAINT disk_filer_host_hostname_fk FOREIGN KEY(hostname) REFERENCES disk_host (hostname) ON DELETE CASCADE
);
CREATE TABLE disk_array (
  name          VARCHAR(255) PRIMARY KEY,
  model         VARCHAR(255),
  type          VARCHAR(255),
  arraysize     BIGINT DEFAULT 0 NOT NULL,
  created       DATE,
  last_modified DATE,
  hostname      VARCHAR(255) CONSTRAINT disk_array_host_fk REFERENCES disk_host (hostname)
);
CREATE TABLE disk_host_array (
  hostname      VARCHAR(255),
  arrayname     VARCHAR(255),
  PRIMARY KEY(hostname,arrayname),
  CONSTRAINT disk_host_array_hostname_fk FOREIGN KEY(hostname) REFERENCES disk_host (hostname) ON DELETE CASCADE,
  CONSTRAINT disk_host_array_arraynme_fk FOREIGN KEY(arrayname) REFERENCES disk_array (name) ON DELETE CASCADE
);
CREATE TABLE disk_gpfs_node (
  gpfsnodename          VARCHAR(255) PRIMARY KEY,
  gpfsnodeip            VARCHAR(255) DEFAULT '' NOT NULL,
  gpfsnodeplatform      VARCHAR(255) DEFAULT '' NOT NULL,
  gpfsnodestatus        VARCHAR(255) DEFAULT '' NOT NULL,
  gpfsnodefailurecount  VARCHAR(255) DEFAULT '' NOT NULL,
  gpfsnodethreadwait    VARCHAR(255) DEFAULT '' NOT NULL,
  gpfsnodehealthy       VARCHAR(255) DEFAULT '' NOT NULL,
  gpfsnodediagnosis     VARCHAR(255) DEFAULT '' NOT NULL,
  gpfsnodeversion       VARCHAR(255) DEFAULT '' NOT NULL,
  created               DATE,
  last_modified         DATE,
  CONSTRAINT disk_gpfs_node_hostname_fk FOREIGN KEY (gpfsnodename) REFERENCES disk_host (hostname)
);
CREATE TABLE disk_gpfs_disk_perf (
  id                            BIGSERIAL PRIMARY KEY,
  volume_id                     BIGSERIAL NOT NULL,
  gpfsdiskperfname              VARCHAR(255) DEFAULT '' NOT NULL,
  gpfsdiskperffsname            VARCHAR(255) DEFAULT '' NOT NULL,
  gpfsdiskperfstgpoolname       VARCHAR(255) DEFAULT '' NOT NULL,
  gpfsdiskreadtimel             BIGINT DEFAULT 0 NOT NULL,
  gpfsdiskreadtimeh             BIGINT DEFAULT 0 NOT NULL,
  gpfsdiskwritetimel            BIGINT DEFAULT 0 NOT NULL,
  gpfsdiskwritetimeh            BIGINT DEFAULT 0 NOT NULL,
  gpfsdisklongestreadtimel      BIGINT DEFAULT 0 NOT NULL,
  gpfsdisklongestreadtimeh      BIGINT DEFAULT 0 NOT NULL,
  gpfsdisklongestwritetimel     BIGINT DEFAULT 0 NOT NULL,
  gpfsdisklongestwritetimeh     BIGINT DEFAULT 0 NOT NULL,
  gpfsdiskshortestreadtimel     BIGINT DEFAULT 0 NOT NULL,
  gpfsdiskshortestreadtimeh     BIGINT DEFAULT 0 NOT NULL,
  gpfsdiskshortestwritetimel    BIGINT DEFAULT 0 NOT NULL,
  gpfsdiskshortestwritetimeh    BIGINT DEFAULT 0 NOT NULL,
  gpfsdiskreadbytesl            BIGINT DEFAULT 0 NOT NULL,
  gpfsdiskreadbytesh            BIGINT DEFAULT 0 NOT NULL,
  gpfsdiskwritebytesl           BIGINT DEFAULT 0 NOT NULL,
  gpfsdiskwritebytesh           BIGINT DEFAULT 0 NOT NULL,
  gpfsdiskreadops               BIGINT DEFAULT 0 NOT NULL,
  gpfsdiskwriteops              BIGINT DEFAULT 0 NOT NULL,
  created                       DATE,
  last_modified                 DATE,
  CONSTRAINT disk_gpfs_disk_perf_fk FOREIGN KEY (volume_id) REFERENCES disk_volume (id)
);
CREATE TABLE disk_gpfs_fs_perf (
  id                            BIGSERIAL PRIMARY KEY,
  volume_id                     BIGSERIAL NOT NULL,
  gpfsfilesystemperfname        VARCHAR(255) NOT NULL,
  gpfsfilesystembytesreadl      BIGINT DEFAULT 0 NOT NULL,
  gpfsfilesystembytesreadh      BIGINT DEFAULT 0 NOT NULL,
  gpfsfilesystembytescachel     BIGINT DEFAULT 0 NOT NULL,
  gpfsfilesystembytescacheh     BIGINT DEFAULT 0 NOT NULL,
  gpfsfilesystembyteswrittenl   BIGINT DEFAULT 0 NOT NULL,
  gpfsfilesystembyteswrittenh   BIGINT DEFAULT 0 NOT NULL,
  gpfsfilesystemreads           BIGINT DEFAULT 0 NOT NULL,
  gpfsfilesystemcaches          BIGINT DEFAULT 0 NOT NULL,
  gpfsfilesystemwrites          BIGINT DEFAULT 0 NOT NULL,
  gpfsfilesystemopencalls       BIGINT DEFAULT 0 NOT NULL,
  gpfsfilesystemclosecalls      BIGINT DEFAULT 0 NOT NULL,
  gpfsfilesystemreadcalls       BIGINT DEFAULT 0 NOT NULL,
  gpfsfilesystemwritecalls      BIGINT DEFAULT 0 NOT NULL,
  gpfsfilesystemreaddircalls    BIGINT DEFAULT 0 NOT NULL,
  gpfsfilesysteminodeswritten   BIGINT DEFAULT 0 NOT NULL,
  gpfsfilesysteminodesread      BIGINT DEFAULT 0 NOT NULL,
  gpfsfilesysteminodesdeleted   BIGINT DEFAULT 0 NOT NULL,
  gpfsfilesysteminodescreated   BIGINT DEFAULT 0 NOT NULL,
  gpfsfilesystemstatcachehit    BIGINT DEFAULT 0 NOT NULL,
  gpfsfilesystemstatcachemiss   BIGINT DEFAULT 0 NOT NULL,
  created                       DATE,
  last_modified                 DATE,
  CONSTRAINT disk_gpfs_fs_perf_fk FOREIGN KEY (volume_id) REFERENCES disk_volume (id)
);
