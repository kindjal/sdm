BEGIN TRANSACTION;
DELETE FROM sqlite_sequence;
INSERT INTO "sqlite_sequence" VALUES('URMETA_DISK_VOLUME_VOLUME_ID_seq',2);
CREATE TABLE URMETA_DISK_VOLUME_VOLUME_ID_seq (next_value integer PRIMARY KEY AUTOINCREMENT);
CREATE TABLE DISK_USER (
  user_id       INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  email         VARCHAR(255) NOT NULL,
  created       DATE,
  last_modified DATE
);
CREATE TABLE DISK_FILER (
  filer_id      INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  hostname      VARCHAR(255) NOT NULL,
  status        UNSIGNED INTEGER NOT NULL DEFAULT 0,
  filesystem    VARCHAR(255),
  comments      VARCHAR(255),
  created       DATE,
  last_modified DATE
);
CREATE TABLE DISK_HOST (
  host_id       INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  hostname      VARCHAR(255) NOT NULL,
  status        UNSIGNED INTEGER NOT NULL DEFAULT 0,
  os            VARCHAR(255),
  location      VARCHAR(255),
  comments      VARCHAR(255),
  created       DATE,
  last_modified DATE,
  filer_id      INTEGER NOT NULL CONSTRAINT HOST_FILER_FK REFERENCES DISK_FILER(filer_id)
);
CREATE TABLE DISK_ARRAY (
  array_id      INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  model         VARCHAR(255) NOT NULL,
  type          VARCHAR(255) NOT NULL,
  size          UNSIGNED INTEGER NOT NULL DEFAULT 0,
  created       DATE,
  last_modified DATE,
  host_id       INTEGER NOT NULL CONSTRAINT ARRAY_HOST_FK REFERENCES DISK_HOST(host_id)
);
CREATE TABLE DISK_VOLUME (
  volume_id     INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  mount_path    VARCHAR(255) NOT NULL,
  physical_path VARCHAR(255) NOT NULL,
  total_kb      UNSIGNED INTEGER NOT NULL DEFAULT 0,
  used_kb       UNSIGNED INTEGER NOT NULL DEFAULT 0,
  created       DATE,
  last_modified DATE,
  filer_id      INTEGER NOT NULL
);
CREATE TABLE DISK_GROUP (
  group_id      INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  name          VARCHAR(255) NOT NULL,
  permissions   UNSIGNED INTEGER NOT NULL DEFAULT 0,
  sticky        UNSIGNED INTEGER NOT NULL DEFAULT 0,
  subdirectory  VARCHAR(255),
  unix_uid      UNSIGNED INTEGER NOT NULL DEFAULT 0,
  unix_gid      UNSIGNED INTEGER NOT NULL DEFAULT 0,
  username      VARCHAR(255),
  parent_group_id INTEGER,
  created       DATE,
  last_modified DATE
);
CREATE TABLE DISK_VOLUME_GROUP (
  group_id      INTEGER NOT NULL,
  volume_id     INTEGER NOT NULL
);
CREATE INDEX hostindex ON DISK_HOST(host_id);
CREATE INDEX filerindex ON DISK_FILER(filer_id);
COMMIT;
