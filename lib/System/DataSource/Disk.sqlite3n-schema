PRAGMA foreign_keys = ON;
DROP TABLE IF EXISTS DISK_USER;
DROP TABLE IF EXISTS DISK_GROUP;
DROP TABLE IF EXISTS DISK_ARRAY;
DROP TABLE IF EXISTS DISK_HOST;
DROP TABLE IF EXISTS DISK_VOLUME;
DROP TABLE IF EXISTS DISK_EXPORT;
DROP TABLE IF EXISTS DISK_FILER;
CREATE TABLE IF NOT EXISTS DISK_USER (
  email         VARCHAR(255) NOT NULL PRIMARY KEY,
  created       DATE,
  last_modified DATE
);
CREATE TABLE IF NOT EXISTS DISK_FILER (
  name          VARCHAR(255) PRIMARY KEY,
  status        UNSIGNED INTEGER DEFAULT 0 NOT NULL ON CONFLICT REPLACE,
  filesystem    VARCHAR(255),
  comments      VARCHAR(255),
  created       DATE,
  last_modified DATE
);
CREATE TABLE IF NOT EXISTS DISK_EXPORT (
  id            INTEGER PRIMARY KEY AUTOINCREMENT,
  filername     VARCHAR(255) NOT NULL,
  physical_path VARCHAR(255) NOT NULL,
  created       DATE,
  last_modified DATE,
  CONSTRAINT DISK_EXPORT_FK FOREIGN KEY(filername) REFERENCES DISK_FILER(name),
  CONSTRAINT DISK_EXPORT_UQ UNIQUE (filername,physical_path)
);
CREATE TABLE IF NOT EXISTS DISK_MOUNT (
  export_id     INTEGER,
  volume_id     INTEGER,
  FOREIGN KEY   (export_id) REFERENCES DISK_EXPORT(id),
  FOREIGN KEY   (volume_id) REFERENCES DISK_VOLUME(id)
);
CREATE TABLE IF NOT EXISTS DISK_VOLUME (
  id            INTEGER PRIMARY KEY AUTOINCREMENT,
  mount_path    VARCHAR(255) NOT NULL,
  total_kb      UNSIGNED INTEGER DEFAULT 0 NOT NULL ON CONFLICT REPLACE,
  used_kb       UNSIGNED INTEGER DEFAULT 0 NOT NULL ON CONFLICT REPLACE,
  created       DATE,
  last_modified DATE,
  disk_group    VARCHAR(255),
  FOREIGN KEY   (disk_group) REFERENCES DISK_GROUP(name)
);
CREATE TABLE IF NOT EXISTS DISK_HOST (
  hostname      VARCHAR(255) NOT NULL PRIMARY KEY,
  status        UNSIGNED INTEGER DEFAULT 0 NOT NULL ON CONFLICT REPLACE,
  os            VARCHAR(255),
  location      VARCHAR(255),
  comments      VARCHAR(255),
  created       DATE,
  last_modified DATE,
  filername     VARCHAR(255) NOT NULL,
  FOREIGN KEY (filername) REFERENCES DISK_FILER(name)
);
CREATE TABLE IF NOT EXISTS DISK_ARRAY (
  name          VARCHAR(255) NOT NULL PRIMARY KEY,
  model         VARCHAR(255),
  type          VARCHAR(255),
  size          UNSIGNED INTEGER DEFAULT 0 NOT NULL ON CONFLICT REPLACE,
  created       DATE,
  last_modified DATE,
  hostname      VARCHAR(255) NOT NULL,
  FOREIGN KEY   (hostname) REFERENCES DISK_HOST(hostname)
);
CREATE TABLE IF NOT EXISTS DISK_GROUP (
  name          VARCHAR(255) NOT NULL PRIMARY KEY,
  permissions   UNSIGNED INTEGER NOT NULL DEFAULT 0,
  sticky        UNSIGNED INTEGER NOT NULL DEFAULT 0,
  subdirectory  VARCHAR(255),
  unix_uid      UNSIGNED INTEGER NOT NULL DEFAULT 0,
  unix_gid      UNSIGNED INTEGER NOT NULL DEFAULT 0,
  username      VARCHAR(255),
  parent_group  VARCHAR(255),
  created       DATE,
  last_modified DATE
);
