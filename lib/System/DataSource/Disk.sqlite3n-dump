PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE DISK_USER (
  email         VARCHAR(255) NOT NULL PRIMARY KEY,
  created       DATE,
  last_modified DATE
);
CREATE TABLE DISK_FILER (
  name          VARCHAR(255) NOT NULL PRIMARY KEY,
  status        UNSIGNED INTEGER DEFAULT 0,
  filesystem    VARCHAR(255),
  comments      VARCHAR(255),
  created       DATE,
  last_modified DATE
);
INSERT INTO "DISK_FILER" VALUES('nfs10',NULL,NULL,NULL,NULL,NULL);
INSERT INTO "DISK_FILER" VALUES('nfs11',NULL,NULL,NULL,NULL,NULL);
CREATE TABLE DISK_HOST (
  hostname      VARCHAR(255) NOT NULL PRIMARY KEY,
  status        UNSIGNED INTEGER DEFAULT 0,
  os            VARCHAR(255),
  location      VARCHAR(255),
  comments      VARCHAR(255),
  created       DATE,
  last_modified DATE,
  filername     INTEGER NOT NULL CONSTRAINT HOST_FILER_FK REFERENCES DISK_FILER(name)
);
CREATE TABLE DISK_ARRAY (
  name          VARCHAR(255) NOT NULL PRIMARY KEY,
  model         VARCHAR(255),
  type          VARCHAR(255),
  size          UNSIGNED INTEGER DEFAULT 0,
  created       DATE,
  last_modified DATE,
  hostname      INTEGER NOT NULL CONSTRAINT ARRAY_HOST_FK REFERENCES DISK_HOST(hostname)
);
CREATE TABLE DISK_VOLUME (
  volume_id     INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
  mount_path    VARCHAR(255) NOT NULL,
  physical_path VARCHAR(255) NOT NULL,
  total_kb      UNSIGNED INTEGER NOT NULL DEFAULT 0,
  used_kb       UNSIGNED INTEGER NOT NULL DEFAULT 0,
  created       DATE,
  last_modified DATE,
  filername     VARCHAR(255) NOT NULL CONSTRAINT VOLUME_FILER_FK REFERENCES DISK_FILER(name)
);
CREATE TABLE DISK_GROUP (
  name          VARCHAR(255) NOT NULL PRIMARY KEY,
  permissions   UNSIGNED INTEGER NOT NULL DEFAULT 0,
  sticky        UNSIGNED INTEGER NOT NULL DEFAULT 0,
  subdirectory  VARCHAR(255),
  unix_uid      UNSIGNED INTEGER NOT NULL DEFAULT 0,
  unix_gid      UNSIGNED INTEGER NOT NULL DEFAULT 0,
  username      VARCHAR(255),
  parent_group_id INTEGER,
  created       DATE,
  last_modified DATE
);
CREATE TABLE DISK_VOLUME_GROUP (
  group_name   VARCHAR(255) NOT NULL CONSTRAINT VOLUME_GROUP_GROUP_FK REFERENCES DISK_GROUP(name),
  volume_id    INTEGER NOT NULL CONSTRAINT VOLUME_GROUP_VOLUME_FK REFERENCES DISK_VOLUME(volume_id)
);
CREATE INDEX hostindex ON DISK_HOST(hostname);
CREATE INDEX filerindex ON DISK_FILER(name);
COMMIT;
