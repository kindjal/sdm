#!/usr/bin/perl

use strict;
use warnings;
use Data::Dumper;

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1; #Important! A UR commit hook is tested below
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
};

use SDM;
use Test::More skip_all => "search not yet implemented";

is(SDM::Search->environment(), 'prod', 'using prod instance of solr');

my @searchable_classes = SDM::Search->searchable_classes();
cmp_ok(scalar(@searchable_classes), '>', 1, 'found some searchable classes:');
print Dumper \@searchable_classes;

### Tests adding/removing documents

my $individual = SDM::Disk::Volume->create(
    filername => 'nfs11',
    mount_path => '/gscmnt/sata800',
    physical_path => '/vol/sata800',
    total_kb => 10,
    used_kb => 10,
    disk_group => 'SYSTEMS',
);

#Test commit hook
ok(UR::Context->commit, 'commit did not crash');

#Manually get Solr document (duplicates what should have happened in commit hook test)
my @individual_doc = SDM::Search->generate_document($individual);
is(scalar @individual_doc, 1, 'got a document for test individual');
isa_ok($individual_doc[0], 'WebService::Solr::Document');

ok($individual->delete, 'delete did not crash');
ok(UR::Context->rollback, 'rollback did not crash');


### Tests for search class resolver

#Search class belongs to parent
my $volume = SDM::Disk::Volume->get();
my $volume_doc = SDM::Search->generate_document($volume); #Model ID mentioned in ReferenceAlignment.t
ok($volume_doc, 'able to produce document for a volume subtype');


#Class not being indexed
my $iub_class = SDM::Search->is_indexable('SDM::Info::IUB');
ok(!$iub_class, 'returned no search class for IUB info module');

#Not a blessed reference
my $hash_class = SDM::Search->is_indexable({ hashkey => 'hashvalue'});
ok(!$hash_class, 'returned no search class for an unblessed hash');

done_testing();
