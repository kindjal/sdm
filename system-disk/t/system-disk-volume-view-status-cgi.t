
use strict;
use warnings;

use System;

use Test::More;
use Test::Output;
use Test::Exception;

use URI;

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 0;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 0;
};

use_ok( 'System' );
use_ok( 'System::Disk::Volume::View::Status::Cgi' );

my $q;
my $o;
my $r;
my $uri;

# Start with a fresh database
use File::Basename qw/dirname/;
my $top = dirname $FindBin::Bin;
require "$top/t/system-lib.pm";
ok( System::Test::Lib->testinit == 0, "ok: init db");

ok( defined System::Disk::Filer->create( name => 'filer' ) );
ok( defined System::Disk::Group->create( name => 'APIPE' ) );
ok( defined System::Disk::Volume->create( filername => 'filer', mount_path => '/gscmnt/sata800', physical_path => '/vol/sata800', disk_group => 'APIPE' ) );
UR::Context->commit();

$uri = '/site/system/disk/volume/status.html.cgi?sEcho=11&iColumns=7&sColumns=&iDisplayStart=0&iDisplayLength=25&sSearch=APIPE&bEscapeRegex=true&sSearch_0=&bEscapeRegex_0=true&bSearchable_0=true&sSearch_1=&bEscapeRegex_1=true&bSearchable_1=true&sSearch_2=&bEscapeRegex_2=true&bSearchable_2=true&sSearch_3=&bEscapeRegex_3=true&bSearchable_3=true&sSearch_4=&bEscapeRegex_4=true&bSearchable_4=true&sSearch_5=&bEscapeRegex_5=true&bSearchable_5=true&iSortingCols=1&iSortCol_0=2&sSortDir_0=desc&bSortable_0=true&bSortable_1=true&bSortable_2=true&bSortable_3=true&bSortable_4=true&bSortable_5=true&rm=table_data HTTP/1.1';

$q = URI->new($uri);
$o = System::Disk::Volume::View::Status::Cgi->new();
$r = $o->_build_result_set($q);

print Data::Dumper::Dumper $r;

done_testing();

