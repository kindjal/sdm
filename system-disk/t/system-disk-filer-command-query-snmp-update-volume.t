
use strict;
use warnings;
use Data::Dumper;

use System;

use Test::More;
use Test::Exception;

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 0;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 0;
};

# Start with a fresh database
use File::Basename qw/dirname/;
my $top = dirname $FindBin::Bin;
my $base = "$top/lib/System";
my $perl = "$^X -I " . join(" -I ",@INC);
system("$perl $top/t/00-system-disk-prep-test-database.t");
ok($? >> 8 == 0, "prep test db ok");

my $command = System::Disk::Filer::Command::QuerySnmp->create();
my $filer = System::Disk::Filer->get_or_create( name => 'nfs11' );
my $result = { '/vol/sata812' => {
                        'total_kb' => 6438990688,
                        'disk_group' => 'PRODUCTION_SOLID',
                        'mount_path' => '/gscmnt/sata812',
                        'used_kb' => 5722964896,
                        'physical_path' => '/vol/sata812'
                      },
};
print "here\n";
my $group = System::Disk::Group->get_or_create( name => 'PRODUCTION_SOLID' );
lives_ok { $command->update_volume($filer,$result); } "usage->update_volume: runs ok";
ok( UR::Context->commit(), "commit succeeds");
#FIXME: remove this when bug is fixed.
exit;
my $volume = System::Disk::Volume->get( filername => 'nfs11', physical_path => '/vol/sata812' );
ok( $volume->total_kb == 6438990688, "total_kb matches" );
ok( $volume->used_kb == 5722964896, "used_kb matches" );
ok( $volume->disk_group eq 'PRODUCTION_SOLID', "disk_group matches" );
ok( $volume->mount_path eq '/gscmnt/sata812', "mount_path matches" );
ok( $volume->physical_path eq '/vol/sata812', "physical_path matches" );
done_testing();
